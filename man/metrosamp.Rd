% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrosamp.R
\name{metrosamp}
\alias{metrosamp}
\title{Perform Metropolis sampling with batch averaging}
\usage{
metrosamp(
  lpost,
  p0,
  nsamp,
  batchlen,
  scale = NULL,
  debug = FALSE,
  ckpt_name = NULL,
  ckpt_freq = 1,
  lp0 = NA
)
}
\arguments{
\item{lpost}{Log-posterior function}

\item{p0}{Starting parameters for sampling, OR a \code{metrosamp} structure
from a previous run.}

\item{nsamp}{Number of batches to run}

\item{batchlen}{Number of samples per batch}

\item{scale}{MC step scaler; this will be multiplied by a vector of standard
normal deviates to get the proposal step.  Optional if a \code{metrosamp}
structure was supplied for \code{p0}; required otherwise.}

\item{debug}{Flag to turn on additional debugging information.}

\item{ckpt_name}{Name of checkpoint files.  Set to \code{NULL} to disable.}

\item{ckpt_freq}{Frequency to write checkpoint values.  Either a \code{difftime}
value, or a numeric value, which will be interpreted as a time in hours. Default
is to write a checkpoint every hour.}

\item{lp0}{Log-posterior for the starting parameters (p0).  If not supplied
it will be calculated automatically.}
}
\value{
A \code{metrosamp} structure of Monte Carlo outputs (described in Details).
}
\description{
This function performs a basic Metropolis sampling of a user-supplied
log-posterior function.  The sampling is done in batches, with the batch
means returned as the output.  Setting the batch length to 1 will produce
unbatched samples.
}
\details{
The output \code{metrosamp} structure will be a list with the following elements:
\describe{
\item{samples}{Matrix (nsamp x nparam) of parameter samples}
\item{samplp}{Vector (nsamp) of log-posterior values for the samples}
\item{accept}{Probability of accepting a proposal, averaged across all
samples}
\item{plast}{Last parameter set.  Can be used to continue sampling where the
last run left off.}
\item{scale}{Scale factor used in the calculation.  Also useful for
continuing a run.}
}
If the \code{debug} flag is set, the output will have some additional
elements that can be used to diagnose the sampling procedure.  If batch
sampling is in use, then most of these will pertain to the \emph{last}
proposal evaluated in each batch.  Intermediate proposals within a batch are
not returned.  Therefore, when debugging proposals, it is best to use a batch
length of 1.
\describe{
\item{proposals}{The proposal parameters evaluated by the sampler.}
\item{proplp}{Log-posterior for the proposals.  The same notes apply as to
the \code{proposals} entry.}
\item{prop_accepted}{Flag indicating whether each proposal was accepted.}
\item{err}{Flag indicating whether an error was caught for the proposal}
}

A run can be continued by passing the \code{metrosamp} structure from the
previous run as the \code{p0} argument.  If this is done, then the
\code{scale} parameter may be omitted, and the new run will use the same
scale as the old.  If a scale parameter \emph{is} supplied, then it will
override the scale parameter stored in the old structure.
}
\section{To Do}{


\itemize{
\item{Fix the batch capability, which is currently wrong.}
\item{Store the last log-posterior value, so continuation runs don't have to
recompute it.}
\item{Add code to compute MCSE.}
\item{Add option to run functions on MC samples.}
}
}

